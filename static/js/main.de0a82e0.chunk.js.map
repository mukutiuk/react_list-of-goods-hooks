{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","sortField","setSortField","reverse","setReverse","visibleGoods","goods","preperedGood","sort","good1","good2","Alphabetically","localeCompare","Length","length","getSorted","className","type","cn","onClick","prevReverse","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,gCAAAA,E,iBAAAA,M,KA8BE,IAAME,EAAgB,WAC3B,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACMC,EA5BR,SAAmBC,EAAiBL,EAAmBE,GACrD,IAAMI,EAAY,YAAOD,GAqBzB,OAnBIL,GACFM,EAAaC,MAAK,SAACC,EAAeC,GAChC,OAAQT,GACN,KAAKJ,EAASc,eACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKb,EAASgB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAKXX,GACFI,EAAaJ,UAGRI,EAMcQ,CAAUjB,EAAiBG,EAAWE,GAE3D,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBE,IAAG,CAC9B,WAAYjB,IAAcJ,EAASc,kBAErCQ,QAAS,kBAAMjB,EAAaL,EAASc,iBALvC,iCAUA,wBACEM,KAAK,SACLD,UAAS,4BAAuBE,IAAG,CACjC,WAAYjB,IAAcJ,EAASgB,UAErCM,QAAS,kBAAMjB,EAAaL,EAASgB,SALvC,4BAWA,wBACEI,KAAK,SACLD,UAAS,4BAAuBE,IAAG,CACjC,YAAaf,KAEfgB,QAAS,kBAAMf,GAAW,SAACgB,GAAD,OAAkBA,MAL9C,sBAUEnB,GAAaE,IAEX,wBACEgB,QAAS,WACPjB,EAAa,IACbE,GAAW,IAEba,KAAK,SACLD,UAAU,4BANZ,sBAaN,6BACE,6BACGX,EAAagB,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAAoBA,eCtGhCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.de0a82e0.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  Alphabetically = 'alphabetically',\n  Length = 'length',\n}\n\nfunction getSorted(goods: string[], sortField: string, reverse: boolean) {\n  const preperedGood = [...goods];\n\n  if (sortField) {\n    preperedGood.sort((good1: string, good2: string) => {\n      switch (sortField) {\n        case SortType.Alphabetically:\n          return good1.localeCompare(good2);\n\n        case SortType.Length:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverse) {\n    preperedGood.reverse();\n  }\n\n  return preperedGood;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState('');\n  const [reverse, setReverse] = useState(false);\n  const visibleGoods = getSorted(goodsFromServer, sortField, reverse);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${cn({\n            'is-light': sortField !== SortType.Alphabetically,\n          })}`}\n          onClick={() => setSortField(SortType.Alphabetically)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${cn({\n            'is-light': sortField !== SortType.Length,\n          })}`}\n          onClick={() => setSortField(SortType.Length)}\n\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${cn({\n            'is-light': !reverse,\n          })}`}\n          onClick={() => setReverse((prevReverse) => !prevReverse)}\n        >\n          Reverse\n        </button>\n\n        {(sortField || reverse)\n          && (\n            <button\n              onClick={() => {\n                setSortField('');\n                setReverse(false);\n              }}\n              type=\"button\"\n              className=\"button is-danger is-light\"\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        <ul>\n          {visibleGoods.map(good => (\n            <li data-cy=\"Good\">{good}</li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}